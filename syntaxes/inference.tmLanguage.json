{
  "scopeName": "source.php.inference",
  "injectionSelector": "L:source.php -comment -string -(string source.php), L:text.html.php -comment -string -(string source.php)",
  "patterns": [
    {
      "include": "#contractions-in-text"
    },
    {
      "include": "#inference-string-single"
    },
    {
      "include": "#inference-string-double"
    }
  ],
  "repository": {
    "inference-string-single": {
      "name": "string.quoted.single.php",
      "begin": "(')",
      "end": "(')",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.string.begin.php"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.end.php"
        }
      },
      "patterns": [
        {
          "include": "#contractions-in-text"
        },
        {
          "include": "#embedded-sql-single"
        },
        {
          "include": "#embedded-html-single"
        }
      ]
    },
    "inference-string-double": {
      "name": "string.quoted.double.php",
      "begin": "(\")",
      "end": "(\")",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.string.begin.php"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.end.php"
        }
      },
      "patterns": [
        {
          "include": "#embedded-sql-double"
        },
        {
          "include": "#embedded-html-double"
        }
      ]
    },
    "embedded-sql-single": {
      "begin": "(?:(?<=')(?:\\s*)|^\\s*)(SELECT|INSERT|UPDATE|DELETE|CREATE|ALTER|DROP|TRUNCATE|GRANT|REVOKE|START\\s+TRANSACTION|BEGIN|COMMIT|ROLLBACK|SAVEPOINT)\\b",
      "end": "(?=')",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.sql"
        }
      },
      "contentName": "source.sql.embedded.php",
      "patterns": [
        {
          "include": "source.sql"
        }
      ]
    },
    "embedded-sql-double": {
      "begin": "(?:(?<=\")(?:\\s*)|^\\s*)(SELECT|INSERT|UPDATE|DELETE|CREATE|ALTER|DROP|TRUNCATE|GRANT|REVOKE|START\\s+TRANSACTION|BEGIN|COMMIT|ROLLBACK|SAVEPOINT)\\b",
      "end": "(?=\")",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.sql"
        }
      },
      "contentName": "source.sql.embedded.php",
      "patterns": [
        {
          "match": "\\s*\\'\\s*",
          "name": "string.quoted.single.php"
        },
        {
          "include": "#php-interpolation"
        },
        {
          "include": "source.sql"
        }
      ]
    },
    "embedded-html-single": {
      "begin": "\\s*(<)(/?[a-zA-Z][a-zA-Z0-9]*)((?:\\s+[a-zA-Z][a-zA-Z0-9-]*(?:=(?:\"[^\"]*\"|[^\\s>]*))?)*)(\\s*)(>)?",
      "end": "(?=')",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "2": {
          "name": "entity.name.tag.html"
        },
        "3": {
          "patterns": [
            {
              "include": "#html-tag-attributes"
            }
          ]
        },
        "4": {
          "name": "punctuation.whitespace.html"
        },
        "5": {
          "name": "punctuation.definition.tag.end.html"
        },
        "6": {
          "name": "punctuation.definition.tag.end.html"
        }
      },
      "contentName": "text.html.embedded.php",
      "patterns": [
        {
          "include": "#contractions-in-text"
        },
        {
          "include": "#html-tags"
        },
        {
          "include": "#php-interpolation"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },
    "embedded-html-double": {
      "begin": "\\s*(<)(/?[a-zA-Z][a-zA-Z0-9]*)((?:\\s+[a-zA-Z][a-zA-Z0-9-]*(?:=(?:'[^']*'|[^\\s>]*))?)*)(\\s*)(>)?",
      "end": "(?=\")",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "2": {
          "name": "entity.name.tag.html"
        },
        "3": {
          "patterns": [
            {
              "include": "#html-tag-attributes"
            }
          ]
        },
        "4": {
          "name": "punctuation.whitespace.html"
        },
        "5": {
          "name": "punctuation.definition.tag.end.html"
        },
        "6": {
          "name": "punctuation.definition.tag.end.html"
        }
      },
      "contentName": "text.html.embedded.php",
      "patterns": [
        {
          "include": "#html-tags"
        },
        {
          "include": "#php-interpolation"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },
    "html-tags": {
      "begin": "(<)([a-zA-Z][a-zA-Z0-9]*)",
      "end": "(?=(>))",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "2": {
          "name": "entity.name.tag.html"
        },
        "3": {
          "name": "punctuation.definition.tag.end.html"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.end.html"
        }
      },
      "patterns": [
        {
          "include": "#html-tag-attributes"
        },
        {
          "include": "#php-interpolation"
        }
      ]
    },
    "html-tag-attributes": {
      "match": "\\s+([a-zA-Z][a-zA-Z0-9-]*)(?:(=)(?:(\"[^\"]*\")|('[^']*')|([^\\s>]*)))?",
      "captures": {
        "1": {
          "name": "entity.other.attribute-name.html"
        },
        "2": {
          "name": "punctuation.separator.key-value.html"
        },
        "3": {
          "name": "string.quoted.double.html",
          "patterns": [
            {
              "include": "#php-interpolation"
            }
          ]
        },
        "4": {
          "name": "string.quoted.single.html",
          "patterns": [
            {
              "include": "#php-interpolation"
            }
          ]
        },
        "5": {
          "name": "string.unquoted.html",
          "patterns": [
            {
              "include": "#php-interpolation"
            }
          ]
        }
      }
    },
    "contractions-in-text": {
      "match": "\\b\\w+(?:'[tdsm]|'(?:ve|re|ll)|\\\\'[tdsm]|\\\\'(?:ve|re|ll))\\b"
    },
    "php-interpolation": {
      "patterns": [
        {
          "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*",
          "name": "variable.other.php"
        },
        {
          "match": "\\s*\\.\\s*",
          "name": "keyword.operator.string.php"
        },
        {
          "match": "\\{",
          "name": "punctuation.definition.begin.bracket.curly.php"
        },
        {
          "match": "\\}",
          "name": "punctuation.definition.end.bracket.curly.php"
        },
        {
          "match": "\\[",
          "name": "punctuation.section.array.begin.php"
        },
        {
          "match": "\\]",
          "name": "punctuation.section.array.end.php"
        }
      ]
    }
  }
}