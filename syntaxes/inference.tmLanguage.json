{
  "scopeName": "source.php.inference",
  "injectionSelector": "L:source.php -comment -string -(string source.php), L:text.html.php -comment -string -(string source.php)",
  "patterns": [
    {
      "include": "#contractions-in-text"
    },
    {
      "include": "#inference-string-single"
    },
    {
      "include": "#inference-string-double"
    }
  ],
  "repository": {
    "inference-string-single": {
      "name": "string.quoted.single.php",
      "begin": "(')",
      "end": "(')",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.string.begin.php"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.end.php"
        }
      },
      "patterns": [
        {
          "include": "#escape-string-single"
        },
        {
          "include": "#contractions-in-text"
        },
        {
          "include": "#embedded-sql-single"
        },
        {
          "include": "#embedded-html-single"
        }
      ]
    },
    "inference-string-double": {
      "name": "string.quoted.double.php",
      "begin": "(\")",
      "end": "(\")",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.string.begin.php"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.end.php"
        }
      },
      "patterns": [
        {
          "include": "#escape-string-double"
        },
        {
          "include": "#php-interpolation"
        },
        {
          "include": "#embedded-sql-double"
        },
        {
          "include": "#embedded-html-double"
        }
      ]
    },
    "embedded-sql-single": {
      "begin": "(?:(?<=')(?:\\s*)|^\\s*)(SELECT|INSERT|UPDATE|DELETE|CREATE|ALTER|DROP|TRUNCATE|GRANT|REVOKE|START\\s+TRANSACTION|BEGIN|COMMIT|ROLLBACK|SAVEPOINT)\\b",
      "end": "(?=')",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.sql"
        }
      },
      "contentName": "source.sql.embedded.php",
      "patterns": [
        {
          "include": "#escape-string-single"
        },
        {
          "include": "source.sql"
        }
      ]
    },
    "embedded-sql-double": {
      "begin": "(?:(?<=\")(?:\\s*)|^\\s*)(SELECT|INSERT|UPDATE|DELETE|CREATE|ALTER|DROP|TRUNCATE|GRANT|REVOKE|START\\s+TRANSACTION|BEGIN|COMMIT|ROLLBACK|SAVEPOINT)\\b",
      "end": "(?=\")",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.sql"
        }
      },
      "contentName": "source.sql.embedded.php",
      "patterns": [
        {
          "include": "#escape-string-double"
        },
        {
          "match": "\\s*\\'\\s*",
          "name": "string.quoted.single.php"
        },
        {
          "include": "#php-interpolation"
        },
        {
          "include": "source.sql"
        }
      ]
    },
    "embedded-html-single": {
      "begin": "\\s*(<)(/)?((?!script\\b)[a-zA-Z][a-zA-Z0-9]*)((?:\\s+[a-zA-Z][a-zA-Z0-9-]*(?:=(?:\"[^\"]*\"|[^\\s>]*))?)*)(\\s*)(/>|>)?",
      "end": "(?=')",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "2": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "3": {
          "name": "entity.name.tag.html"
        },
        "4": {
          "patterns": [
            {
              "include": "#html-tag-attributes"
            }
          ]
        },
        "5": {
          "name": "punctuation.whitespace.html"
        },
        "6": {
          "name": "punctuation.definition.tag.end.html"
        }
      },
      "contentName": "text.html.embedded.php",
      "patterns": [
        {
          "include": "#escape-string-single"
        },
        {
          "include": "#contractions-in-text"
        },
        {
          "include": "#html-tags"
        },
        {
          "include": "#php-interpolation"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },
    "embedded-html-double": {
      "begin": "\\s*(<)(/)?((?!script\\b)[a-zA-Z][a-zA-Z0-9]*)((?:\\s+[a-zA-Z][a-zA-Z0-9-]*(?:=(?:'[^']*'|[^\\s>]*))?)*)(\\s*)(/>|>)?",
      "end": "(?=\")",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "2": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "3": {
          "name": "entity.name.tag.html"
        },
        "4": {
          "patterns": [
            {
              "include": "#html-tag-attributes"
            }
          ]
        },
        "5": {
          "name": "punctuation.whitespace.html"
        },
        "6": {
          "name": "punctuation.definition.tag.end.html"
        }
      },
      "contentName": "text.html.embedded.php",
      "patterns": [
        {
          "include": "#escape-string-double"
        },
        {
          "include": "#html-tags"
        },
        {
          "include": "#php-interpolation"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },
    "html-tags": {
      "begin": "(<)(/)?([a-zA-Z][a-zA-Z0-9]*)",
      "end": "(?=(>|\\/>))",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "2": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "3": {
          "name": "entity.name.tag.html"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.end.html"
        }
      },
      "patterns": [
        {
          "include": "#html-tag-attributes"
        },
        {
          "include": "#php-interpolation"
        }
      ]
    },
    "html-tag-attributes": {
      "match": "\\s+([a-zA-Z][a-zA-Z0-9-]*)(?:(=)(?:(\"[^\"]*\")|('[^']*')|([^\\s>]*)))?",
      "captures": {
        "1": {
          "name": "entity.other.attribute-name.html"
        },
        "2": {
          "name": "punctuation.separator.key-value.html"
        },
        "3": {
          "name": "string.quoted.double.html",
          "patterns": [
            {
              "match": "\\s*\\.\\s*",
              "name": "keyword.operator.string.php"
            },
            {
              "include": "#php-interpolation"
            }
          ]
        },
        "4": {
          "name": "string.quoted.single.html",
          "patterns": [
            {
              "include": "#php-interpolation"
            }
          ]
        },
        "5": {
          "name": "string.unquoted.html",
          "patterns": [
            {
              "include": "#php-interpolation"
            }
          ]
        }
      }
    },
    "php-interpolation": {
      "patterns": [
        {
          "include": "#php-function"
        },
        {
          "include": "#php-variable"
        },
        {
          "begin": "\\{(?=\\$)",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.variable.php"
            }
          },
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.variable.php"
            }
          },
          "patterns": [
            {
              "include": "#php-function"
            },
            {
              "include": "#php-variable"
            }
          ]
        }
      ]
    },
    "php-function": {
      "patterns": [
        {
          "match": "\\$\\{\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\()(.*?)(\\))\\s*\\}",
          "captures": {
            "0": {
              "name": "punctuation.definition.variable.php"
            },
            "1": {
              "name": "entity.name.function.php"
            },
            "2": {
              "name": "punctuation.definition.arguments.begin.bracket.round.php"
            },
            "3": {
              "patterns": [
                {
                  "include": "#php-variable"
                },
                {
                  "include": "source.php"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.arguments.end.bracket.round.php"
            },
            "5": {
              "name": "punctuation.definition.variable.php"
            }
          }
        },
        {
          "match": "\\$([a-zA-Z_][a-zA-Z0-9_]*)(\\()(.*?)(\\))",
          "captures": {
            "0": {
              "name": "meta.function-call.php"
            },
            "1": {
              "name": "entity.name.function.php"
            },
            "2": {
              "name": "punctuation.definition.arguments.begin.bracket.round.php"
            },
            "3": {
              "patterns": [
                {
                  "include": "#php-variable"
                },
                {
                  "include": "source.php"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.arguments.end.bracket.round.php"
            }
          }
        }
      ]
    },
    "php-variable": {
      "patterns": [
        {
          "match": "(\\$[a-zA-Z_][a-zA-Z0-9_][a-zA-Z_][a-zA-Z0-9_]*)(->)([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "variable.other.php"
            },
            "2": {
              "name": "keyword.operator.class.php"
            },
            "3": {
              "name": "variable.other.property.php"
            }
          }
        },
        {
          "match": "(\\$[a-zA-Z_][a-zA-Z0-9_]*)((?:\\[(?:(['\"]).+?\\3|\\d+)\\])+)",
          "captures": {
            "1": {
              "name": "variable.other.php"
            },
            "2": {
              "patterns": [
                {
                  "match": "\\[",
                  "name": "punctuation.section.array.begin.php"
                },
                {
                  "match": "\\]",
                  "name": "punctuation.section.array.end.php"
                },
                {
                  "match": "(['\"]).+?\\1",
                  "name": "string.quoted.php"
                },
                {
                  "match": "\\d+",
                  "name": "constant.numeric.php"
                }
              ]
            }
          }
        },
        {
          "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*",
          "name": "variable.other.php"
        }
      ]
    },
    "contractions-in-text": {
      "match": "\\b\\w+(?:'[tdsm]|'(?:ve|re|ll))\\b"
    },
    "escape-string-single": {
      "match": "\\\\(['\\\\])",
      "name": "constant.character.escape.php"
    },
    "escape-string-double": {
      "match": "\\\\([\"\\\\nrtf$]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2})",
      "name": "constant.character.escape.php"
    }
  }
}