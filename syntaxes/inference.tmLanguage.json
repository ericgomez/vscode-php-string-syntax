{
  "scopeName": "source.php.inference",
  "injectionSelector": "L:text.html.php -comment -string",
  "patterns": [
    {
      "include": "#inference-string-single"
    },
    {
      "include": "#inference-string-double"
    }
  ],
  "repository": {
    "inference-string-single": {
      "begin": "(')(?=\\s*(<)(/?[a-zA-Z][a-zA-Z0-9]*)((?:\\s+[a-zA-Z][a-zA-Z0-9]*(?:=(?:\"[^\"]*\"|[^\\s>]*))?)*)(\\s*)(>)?|\\s*$)",
      "end": "(')",
      "beginCaptures": {
        "1": {
          "name": "string.quoted.single.php"
        }
      },
      "endCaptures": {
        "1": {
          "name": "string.quoted.single.php"
        }
      },
      "contentName": "string.quoted.single.php",
      "patterns": [
        {
          "begin": "^\\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|ALTER|DROP|TRUNCATE|GRANT|REVOKE|START\\s+TRANSACTION|BEGIN|COMMIT|ROLLBACK|SAVEPOINT)\\b",
          "end": "(?=')",
          "beginCaptures": {
            "1": {
              "name": "keyword.other.sql"
            }
          },
          "contentName": "source.sql.embedded.php",
          "patterns": [
            {
              "include": "source.sql"
            }
          ]
        },
        {
          "begin": "(<)(/?[a-zA-Z][a-zA-Z0-9]*)((?:\\s+[a-zA-Z][a-zA-Z0-9]*(?:=(?:\"[^\"]*\"|[^\\s>]*))?)*)(\\s*)(>)?",
          "end": "(?=')",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "2": {
              "name": "entity.name.tag.html"
            },
            "3": {
              "patterns": [
                {
                  "match": "\\s*([a-zA-Z][a-zA-Z0-9]*)(?:(=)(?:(\"[^\"]*\")|([^\\s>]*)))?",
                  "captures": {
                    "1": {
                      "name": "entity.other.attribute-name.html"
                    },
                    "2": {
                      "name": "punctuation.separator.key-value.html"
                    },
                    "3": {
                      "name": "string.quoted.html"
                    },
                    "4": {
                      "name": "string.unquoted.html"
                    }
                  }
                }
              ]
            },
            "4": {
              "name": "punctuation.whitespace.html"
            },
            "5": {
              "name": "punctuation.definition.tag.end.html"
            }
          },
          "contentName": "text.html.embedded.php",
          "patterns": [
            {
              "include": "text.html.basic"
            }
          ]
        }
      ]
    },
    "inference-string-double": {
      "begin": "(\")(?=\\s*(<)(/?[a-zA-Z][a-zA-Z0-9]*)((?:\\s+[a-zA-Z][a-zA-Z0-9]*(?:=(?:'[^']*'|[^\\s>]*))?)*)(\\s*)(>)?|\\s*$)",
      "end": "(\")",
      "beginCaptures": {
        "1": {
          "name": "string.quoted.double.php"
        }
      },
      "endCaptures": {
        "1": {
          "name": "string.quoted.double.php"
        }
      },
      "contentName": "string.quoted.double.php",
      "patterns": [
        {
          "begin": "^\\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|ALTER|DROP|TRUNCATE|GRANT|REVOKE|START\\s+TRANSACTION|BEGIN|COMMIT|ROLLBACK|SAVEPOINT)\\b",
          "end": "(?=\")",
          "beginCaptures": {
            "1": {
              "name": "keyword.other.sql"
            }
          },
          "contentName": "source.sql.embedded.php",
          "patterns": [
            {
              "include": "source.sql"
            },
            {
              "include": "#php-interpolation"
            }
          ]
        },
        {
          "begin": "(<)(/?[a-zA-Z][a-zA-Z0-9]*)((?:\\s+[a-zA-Z][a-zA-Z0-9]*(?:=(?:'[^']*'|[^\\s>]*))?)*)(\\s*)(>)?",
          "end": "(?=\")",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "2": {
              "name": "entity.name.tag.html"
            },
            "3": {
              "patterns": [
                {
                  "match": "\\s*([a-zA-Z][a-zA-Z0-9]*)(?:(=)(?:('[^']*')|([^\\s>]*)))?",
                  "captures": {
                    "1": {
                      "name": "entity.other.attribute-name.html"
                    },
                    "2": {
                      "name": "punctuation.separator.key-value.html"
                    },
                    "3": {
                      "name": "string.quoted.html"
                    },
                    "4": {
                      "name": "string.unquoted.html"
                    }
                  }
                }
              ]
            },
            "4": {
              "name": "punctuation.whitespace.html"
            },
            "5": {
              "name": "punctuation.definition.tag.end.html"
            }
          },
          "contentName": "text.html.embedded.php",
          "patterns": [
            {
              "include": "text.html.basic"
            },
            {
              "include": "#php-interpolation"
            }
          ]
        }
      ]
    },
    "php-interpolation": {
      "patterns": [
        {
          "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*",
          "name": "variable.other.php"
        },
        {
          "match": "\\{",
          "name": "punctuation.definition.begin.bracket.curly.php"
        },
        {
          "match": "\\}",
          "name": "punctuation.definition.end.bracket.curly.php"
        },
        {
          "match": "\\[",
          "name": "punctuation.section.array.begin.php"
        },
        {
          "match": "\\]",
          "name": "punctuation.section.array.end.php"
        }
      ]
    }
  }
}