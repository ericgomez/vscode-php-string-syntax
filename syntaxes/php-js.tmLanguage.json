{
  "scopeName": "source.php.js",
  "injectionSelector": "L:text.html.php -comment -string",
  "patterns": [
    {
      "include": "#js-string-single"
    },
    {
      "include": "#js-string-double"
    }
  ],
  "repository": {
    "js-string-single": {
      "begin": "(/\\*js\\*/)\\s*(')",
      "end": "(')",
      "beginCaptures": {
        "1": {
          "name": "comment.block.php"
        },
        "2": {
          "name": "string.quoted.single.php punctuation.definition.string.begin.php"
        }
      },
      "endCaptures": {
        "1": {
          "name": "string.quoted.single.php punctuation.definition.string.end.php"
        }
      },
      "contentName": "string.quoted.single.php",
      "patterns": [
        {
          "begin": "(?<=')",
          "end": "(?=')",
          "contentName": "source.js.embedded.php",
          "patterns": [
            {
              "include": "source.js"
            }
          ]
        }
      ]
    },
    "js-string-double": {
      "begin": "(/\\*js\\*/)\\s*(\")",
      "end": "(\")",
      "beginCaptures": {
        "1": {
          "name": "comment.block.php"
        },
        "2": {
          "name": "string.quoted.double.php punctuation.definition.string.begin.php"
        }
      },
      "endCaptures": {
        "1": {
          "name": "string.quoted.double.php punctuation.definition.string.end.php"
        }
      },
      "contentName": "string.quoted.double.php",
      "patterns": [
        {
          "begin": "(?<=\")",
          "end": "(?=\")",
          "contentName": "source.js.embedded.php",
          "patterns": [
            {
              "include": "#js-script-tags"
            },
            {
              "include": "source.js"
            },
            {
              "include": "#php-interpolation"
            }
          ]
        }
      ]
    },
    "js-script-tags": {
      "patterns": [
        {
          "begin": "(<)(script)(?=\\s|>)",
          "end": "(</)\\s*(script)\\s*(>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "2": {
              "name": "entity.name.tag.script.html"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "2": {
              "name": "entity.name.tag.script.html"
            },
            "3": {
              "name": "punctuation.definition.tag.end.html"
            }
          },
          "patterns": [
            {
              "begin": "\\G",
              "end": "(>)",
              "endCaptures": {
                "1": {
                  "name": "punctuation.definition.tag.end.html"
                }
              },
              "patterns": [
                {
                  "include": "#script-tag-attributes"
                }
              ]
            },
            {
              "begin": "(?<=>)",
              "end": "(?=</script>)",
              "contentName": "source.js.embedded.html",
              "patterns": [
                {
                  "include": "source.js"
                },
                {
                  "include": "#php-interpolation"
                }
              ]
            }
          ]
        },
        {
          "begin": "(<)(script)(?=\\s|/?>)",
          "end": "(/?>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "2": {
              "name": "entity.name.tag.script.html"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.tag.end.html"
            }
          },
          "patterns": [
            {
              "include": "#script-tag-attributes"
            }
          ]
        }
      ]
    },
    "script-tag-attributes": {
      "patterns": [
        {
          "match": "\\s+([a-zA-Z-]+)(?:=((['\"])([^'\"]*?)\\3|([^\\s>]+)))?",
          "captures": {
            "1": {
              "name": "entity.other.attribute-name.html"
            },
            "2": {
              "name": "string.quoted.html"
            },
            "3": {
              "name": "punctuation.definition.string.begin.html"
            },
            "4": {
              "patterns": [
                {
                  "include": "#php-interpolation"
                },
                {
                  "match": ".*",
                  "name": "string.unquoted.html"
                }
              ]
            },
            "5": {
              "name": "string.unquoted.html"
            }
          }
        },
        {
          "match": "\\s+([a-zA-Z-]+)",
          "captures": {
            "1": {
              "name": "entity.other.attribute-name.html"
            }
          }
        }
      ]
    },
    "php-interpolation": {
      "patterns": [
        {
          "include": "#php-function"
        },
        {
          "include": "#php-variable"
        },
        {
          "begin": "\\{(?=\\$)",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.variable.php"
            }
          },
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.variable.php"
            }
          },
          "patterns": [
            {
              "include": "#php-function"
            },
            {
              "include": "#php-variable"
            }
          ]
        }
      ]
    },
    "php-function": {
      "patterns": [
        {
          "match": "\\$\\{\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\()(.*?)(\\))\\s*\\}",
          "captures": {
            "0": {
              "name": "punctuation.definition.variable.php"
            },
            "1": {
              "name": "entity.name.function.php"
            },
            "2": {
              "name": "punctuation.definition.arguments.begin.bracket.round.php"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.php"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.arguments.end.bracket.round.php"
            },
            "5": {
              "name": "punctuation.definition.variable.php"
            }
          }
        },
        {
          "match": "\\$([a-zA-Z_][a-zA-Z0-9_]*)(\\()(.*?)(\\))",
          "captures": {
            "0": {
              "name": "meta.function-call.php"
            },
            "1": {
              "name": "entity.name.function.php"
            },
            "2": {
              "name": "punctuation.definition.arguments.begin.bracket.round.php"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.php"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.arguments.end.bracket.round.php"
            }
          }
        }
      ]
    },
    "php-variable": {
      "patterns": [
        {
          "match": "(\\$[a-zA-Z_][a-zA-Z0-9_][a-zA-Z_][a-zA-Z0-9_]*)(->)([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "variable.other.php"
            },
            "2": {
              "name": "keyword.operator.class.php"
            },
            "3": {
              "name": "variable.other.property.php"
            }
          }
        },
        {
          "match": "(\\$[a-zA-Z_][a-zA-Z0-9_]*)((?:\\[(?:(['\"]).+?\\3|\\d+)\\])+)",
          "captures": {
            "1": {
              "name": "variable.other.php"
            },
            "2": {
              "patterns": [
                {
                  "match": "\\[",
                  "name": "punctuation.section.array.begin.php"
                },
                {
                  "match": "\\]",
                  "name": "punctuation.section.array.end.php"
                },
                {
                  "match": "(['\"]).+?\\1",
                  "name": "string.quoted.php"
                },
                {
                  "match": "\\d+",
                  "name": "constant.numeric.php"
                }
              ]
            }
          }
        },
        {
          "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*",
          "name": "variable.other.php"
        }
      ]
    }
  }
}