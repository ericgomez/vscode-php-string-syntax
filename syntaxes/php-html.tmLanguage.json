{
  "scopeName": "source.php.html",
  "injectionSelector": "L:text.html.php -comment -string",
  "patterns": [
    {
      "include": "#html-string-single"
    },
    {
      "include": "#html-string-double"
    }
  ],
  "repository": {
    "html-string-single": {
      "begin": "(/\\*html\\*/)\\s*(')",
      "end": "(')",
      "beginCaptures": {
        "1": {
          "name": "comment.block.php"
        },
        "2": {
          "name": "string.quoted.single.php punctuation.definition.string.begin.php"
        }
      },
      "endCaptures": {
        "1": {
          "name": "string.quoted.single.php punctuation.definition.string.end.php"
        }
      },
      "contentName": "string.quoted.single.php",
      "patterns": [
        {
          "begin": "(?<=')",
          "end": "(?=')",
          "contentName": "text.html.embedded.php",
          "patterns": [
            {
              "begin": "(<)(/?[a-zA-Z][a-zA-Z0-9]*)",
              "beginCaptures": {
                "1": {
                  "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                  "name": "entity.name.tag.html"
                }
              },
              "end": "(>)",
              "endCaptures": {
                "1": {
                  "name": "punctuation.definition.tag.end.html"
                }
              },
              "patterns": [
                {
                  "match": "\\s*([a-zA-Z][a-zA-Z0-9-]*)(?:(=)(?:(\"[^\"]*\")|\"([^\"]*)\"|([^\\s>]*)))?",
                  "captures": {
                    "1": {
                      "name": "entity.other.attribute-name.html"
                    },
                    "2": {
                      "name": "punctuation.separator.key-value.html"
                    },
                    "3": {
                      "name": "string.quoted.double.html",
                      "patterns": [
                        {
                          "match": "\\s*\\.\\s*",
                          "name": "keyword.operator.string.php"
                        },
                        {
                          "include": "#php-interpolation"
                        }
                      ]
                    },
                    "4": {
                      "name": "string.quoted.single.html",
                      "patterns": [
                        {
                          "include": "#php-interpolation"
                        }
                      ]
                    },
                    "5": {
                      "name": "string.unquoted.html",
                      "patterns": [
                        {
                          "include": "#php-interpolation"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "include": "#escape-string-single"
            },
            {
              "include": "#php-interpolation"
            }
          ]
        }
      ]
    },
    "html-string-double": {
      "begin": "(/\\*html\\*/)\\s*(\")",
      "end": "(\")",
      "beginCaptures": {
        "1": {
          "name": "comment.block.php"
        },
        "2": {
          "name": "string.quoted.double.php punctuation.definition.string.begin.php"
        }
      },
      "endCaptures": {
        "1": {
          "name": "string.quoted.double.php punctuation.definition.string.end.php"
        }
      },
      "contentName": "string.quoted.double.php",
      "patterns": [
        {
          "begin": "(?<=\")",
          "end": "(?=\")",
          "contentName": "text.html.embedded.php",
          "patterns": [
            {
              "begin": "(<)(/?[a-zA-Z][a-zA-Z0-9]*)",
              "beginCaptures": {
                "1": {
                  "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                  "name": "entity.name.tag.html"
                }
              },
              "end": "(>)",
              "endCaptures": {
                "1": {
                  "name": "punctuation.definition.tag.end.html"
                }
              },
              "patterns": [
                {
                  "match": "\\s*([a-zA-Z][a-zA-Z0-9-]*)(?:(=)(?:('[^']*')|'([^']*)'|([^\\s>]*)))?",
                  "captures": {
                    "1": {
                      "name": "entity.other.attribute-name.html"
                    },
                    "2": {
                      "name": "punctuation.separator.key-value.html"
                    },
                    "3": {
                      "name": "string.quoted.single.html",
                      "patterns": [
                        {
                          "include": "#php-interpolation"
                        }
                      ]
                    },
                    "4": {
                      "name": "string.quoted.single.html",
                      "patterns": [
                        {
                          "include": "#php-interpolation"
                        }
                      ]
                    },
                    "5": {
                      "name": "string.unquoted.html",
                      "patterns": [
                        {
                          "include": "#php-interpolation"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "include": "#escape-string-double"
            },
            {
              "include": "#php-interpolation"
            }
          ]
        }
      ]
    },
    "php-interpolation": {
      "patterns": [
        {
          "include": "#php-variable"
        },
        {
          "begin": "\\{(?=\\$)",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.variable.php"
            }
          },
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.variable.php"
            }
          },
          "patterns": [
            {
              "include": "#php-function"
            },
            {
              "include": "#php-variable"
            }
          ]
        }
      ]
    },
    "php-function": {
      "patterns": [
        {
          "match": "\\$\\{\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\()(.*?)(\\))\\s*\\}",
          "captures": {
            "0": {
              "name": "punctuation.definition.variable.php"
            },
            "1": {
              "name": "entity.name.function.php"
            },
            "2": {
              "name": "punctuation.definition.arguments.begin.bracket.round.php"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.php"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.arguments.end.bracket.round.php"
            },
            "5": {
              "name": "punctuation.definition.variable.php"
            }
          }
        }
      ]
    },
    "php-variable": {
      "patterns": [
        {
          "match": "(\\$[a-zA-Z_][a-zA-Z0-9_][a-zA-Z_][a-zA-Z0-9_]*)(->)([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "variable.other.php"
            },
            "2": {
              "name": "keyword.operator.class.php"
            },
            "3": {
              "name": "variable.other.property.php"
            }
          }
        },
        {
          "match": "(\\$[a-zA-Z_][a-zA-Z0-9_]*)((?:\\[(?:(['\"]).+?\\3|\\d+)\\])+)",
          "captures": {
            "1": {
              "name": "variable.other.php"
            },
            "2": {
              "patterns": [
                {
                  "match": "\\[",
                  "name": "punctuation.section.array.begin.php"
                },
                {
                  "match": "\\]",
                  "name": "punctuation.section.array.end.php"
                },
                {
                  "match": "(['\"]).+?\\1",
                  "name": "string.quoted.php"
                },
                {
                  "match": "\\d+",
                  "name": "constant.numeric.php"
                }
              ]
            }
          }
        },
        {
          "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*",
          "name": "variable.other.php"
        }
      ]
    },
    "escape-string-single": {
      "match": "\\\\(['\\\\nrtvef$]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2})",
      "name": "constant.character.escape.php"
    },
    "escape-string-double": {
      "match": "\\\\([\"\\\\nrtvef$]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2})",
      "name": "constant.character.escape.php"
    }
  }
}